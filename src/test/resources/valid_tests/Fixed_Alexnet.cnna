architecture Fixed_Alexnet{
    def input Z(0:255)^{256,256,3} image
    def output Q(0:1)^{10} predictions

    def conv(filter, channels, hasPool=true, convStride=1){
        Convolution(kernel=filter, channels=channels, stride=convStride) ->
        Relu() ->
        MaxPooling(kernel=(3,3), stride=2, _if=hasPool)
    }
    def fc(){
        FullyConnected(units=4096) ->
        Relu() ->
        Dropout()
    }
    def split1(i, groups){
        Split(index=i, n=groups) ->
        conv(filter=(5,5), channels=128) ->
        Lrn(nsize=5, alpha=0.0001, beta=0.75)
    }
    def split2(i, groups){
        Split(index=i, n=groups) ->
        conv(filter=(3,3), channels=192, hasPool=false) ->
        conv(filter=(3,3), channels=128)
    }

    image ->
    conv(filter=(11,11), channels=96, convStride=4) ->
    Lrn(nsize=5, alpha=0.0001, beta=0.75) ->

    split1(i=[0|1], groups=2) ->

    conv(filter=(3,3), channels=384 ,hasPool=false) ->

    split2(i=[0|1], groups=2) ->

    fc(_for=[1->2]) ->
    FullyConnected(units=10) ->
    Softmax() ->
    predictions
}